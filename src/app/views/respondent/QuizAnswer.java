/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package app.views.respondent;

import app.models.Model;
import app.models.Question;
import app.models.Quiz;
import java.awt.Color;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JPanel;
import org.json.JSONObject;

/**
 *
 * @author iakba
 */
public class QuizAnswer extends javax.swing.JPanel {
  private Model quiz;
  private JSONObject data;
  private LinkedList<JSONObject> questionData;
  private int count = 0;
  private int counter = 0;
  private TimerTask task;

  /**
   * Creates new form QuizAnswer
   */
  public QuizAnswer(String code) {
    initComponents();
    
    Model questionModel = new Question();
    quiz = new Quiz();
    data = quiz.get("code", code);
    
    questionData = new LinkedList<>();
    
    data.getJSONArray("questions").forEach(item -> {
      questionData.add(questionModel.get((String) item));
    });
    
    title.setText(data.getString("name"));
    answerPanel.setBackground(new Color(0, 0, 0, 0));
    
    updateQuestion();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    answerPanel = new javax.swing.JPanel();
    question = new javax.swing.JLabel();
    title = new javax.swing.JLabel();
    time = new javax.swing.JLabel();
    btnNext = new javax.swing.JLabel();
    background = new javax.swing.JLabel();

    setBackground(new java.awt.Color(68, 74, 74));
    setMinimumSize(new java.awt.Dimension(799, 527));
    setPreferredSize(new java.awt.Dimension(799, 527));
    setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    answerPanel.setBackground(new java.awt.Color(0, 0, 0));
    answerPanel.setLayout(new java.awt.CardLayout());
    add(answerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 286, 670, 220));

    question.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
    question.setForeground(new java.awt.Color(255, 255, 255));
    question.setText("Apa itu Javascript?");
    question.setVerticalAlignment(javax.swing.SwingConstants.TOP);
    add(question, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 705, 165));

    title.setFont(new java.awt.Font("Comic Sans MS", 1, 40)); // NOI18N
    title.setForeground(new java.awt.Color(255, 255, 255));
    title.setText("Pemrograman Objek");
    add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 510, -1));

    time.setFont(new java.awt.Font("sansserif", 0, 32)); // NOI18N
    time.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    time.setText("00:00");
    add(time, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 20, 105, 50));

    btnNext.setText("Next");
    btnNext.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    btnNext.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        btnNextMouseClicked(evt);
      }
    });
    add(btnNext, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 400, -1, -1));

    background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/background/quizAnswer.png"))); // NOI18N
    add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(-4, 0, -1, -1));
  }// </editor-fold>//GEN-END:initComponents

  private void btnNextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNextMouseClicked
    nextQuestion();
  }//GEN-LAST:event_btnNextMouseClicked

  private void nextQuestion(){
    task.cancel();
    count++;
    updateQuestion();
  }
  
  private void setAnswerPanel(JPanel panel){
    answerPanel.removeAll();
    answerPanel.add(panel);
  }
  
  private void updateQuestion(){
    JSONObject currentQuestion = questionData.get(count);
    counter = currentQuestion.getInt("time");
    
    time.setForeground(Color.WHITE);
    time.setText(counter + "");
    
    task = new TimerTask() {
        @Override
        public void run() {
          time.setText(--counter + "");
          if(counter <= 5) time.setForeground(Color.RED);
          if(counter <= 0) {
            cancel();
            nextQuestion();
          }
        }
    };
    
    int delay = 1000; // 1 second first delay
    int period = 1000; // 1 second every time changing
    
    Timer timer = new Timer("Timer");
    timer.schedule(task, delay, period);
    
    question.setText(currentQuestion.getString("question"));
    
    switch(currentQuestion.getString("type")){
      case "SingleChoise" -> setAnswerPanel(new SingleChoise());
      case "MultiChoises" -> setAnswerPanel(new MultiChoises());
      case "ShortEssay" -> setAnswerPanel(new ShortEssay());
      case "LongEssay" -> setAnswerPanel(new LongEssay());
    }
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JPanel answerPanel;
  private javax.swing.JLabel background;
  private javax.swing.JLabel btnNext;
  private javax.swing.JLabel question;
  private javax.swing.JLabel time;
  private javax.swing.JLabel title;
  // End of variables declaration//GEN-END:variables
}
